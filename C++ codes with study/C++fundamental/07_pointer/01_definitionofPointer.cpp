#include <iostream>
using namespace std;
// 指针的作用： 可以通过指针间接访问内存
// 内存编号是从0开始记录的，一般用十六进制数字表示
// 可以利用指针变量保存地址
// 指针变量定义语法： 数据类型 * 变量名
int main(){
  //1、指针的定义
    int a = 10; //定义整型变量a
    //指针定义语法： 数据类型 * 变量名 ;
    int * p; //也可以直接 int* p = &a; 刚开始学的时候我有疑问，*p不是a的地址吗为什么后面变成
             //a的值了，后面才知道这只是定义阶段必须使用得语法，通过这种语法定义了指针p,
             //其实指针p才是保存的地址，就像把他们分开写一样，最后是 p = &a; 
    //指针变量赋值
    p = &a; //指针指向变量a的地址
    cout << &a << endl; //打印数据a的地址
    cout << p << endl; //打印指针变量p
    //2、指针的使用
    //可以通过解引用的方式来找到指针指向的内存
    //指针前加 * 代表解引用，通过*操作指针变量指向的内存
    cout << "*p = " << *p << endl;
    //通过指针修改a的值
    *p = 666;
    cout << "*p = " << *p << endl;
    cout << "a = " << a << endl;
    return 0;
}

// 指针变量和普通变量的区别
// 普通变量存放的是数据,指针变量存放的是地址
// 指针变量可以通过" * "操作符，操作指针变量指向的内存空间，这个过程称为解引用
// 总结1： 我们可以通过 & 符号 获取变量的地址
// 总结2：利用指针可以记录地址
// 总结3：对指针变量解引用，可以操作指针指向的内存