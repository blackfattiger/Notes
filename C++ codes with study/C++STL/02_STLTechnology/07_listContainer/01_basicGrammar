3.7 list容器
3.7.1 list基本概念
功能：将数据进行链式存储
链表（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的
链表的组成：链表由一系列结点组成
结点的组成：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域
STL中的链表是一个双向循环链表
; 链表的概念图里面画错了一个地方，在双向循环链表中，第一个元素的prev指针指向最后一个元素，最后一个元素的next指针指向第一个元素

由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于双向迭代器
list的优点：
采用动态存储分配，不会造成内存浪费和溢出
链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素  //连续空间如果要插入一个数据就会把其后的数据全部往后移动，如果数据量庞大会耗费大量时间
list的缺点：
链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大   //想要访问一个数据需要进行遍历，耗费大量时间
; 因为数组是一片连续的内存空间，想要访问后面的元素直接加一个数字就可以找到后面的数据，
; 链表只能从上一个节点获取下一个节点的地址，并且一个一个加上才能找到后边的元素
List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。
; 链表中插入删除不会影响原来的节点，而数组中如果插入删除中间节点，会开辟新的内存空间，那么原来的迭代器（指针）就失效了

总结：STL中List和vector是两个最常被使用的容器，各有优缺点

; 总之c++要尽量使用容器来简化编程工作。