// 4 类和对象
// C++面向对象的三大特性为：==封装、继承、多态==
// C++认为==万事万物都皆为对象==，对象上有其属性和行为
// 例如：
// 人可以作为对象，属性有姓名、年龄、身高、体重...，行为有走、跑、跳、吃饭、唱歌...
// 车也可以作为对象，属性有轮胎、方向盘、车灯...,行为有载人、放音乐、放空调...
// 具有相同性质的==对象==，我们可以抽象称为==类==，人属于人类，车属于车类
// 4.1 封装
// 4.1.1 封装的意义
// 封装是C++面向对象三大特性之一
// 封装的意义：
// 将属性和行为作为一个整体，表现生活中的事物
// 将属性和行为加以权限控制
// 封装意义一：
// 在设计类的时候，属性和行为写在一起，表现事物
// 语法： class 类名{ 访问权限： 属性 / 行为 };
// 示例1：设计一个圆类，求圆的周长


#include <iostream>
using namespace std;

//圆周率 
const double PI = 3.14;
//1、封装的意义 //将属性和行为作为一个整体，用来表现生活中的事物
//封装一个圆类，求圆的周长 //class代表设计一个类，后面跟着的是类名 
class Circle { 
public: //访问权限 公共的权限
    int m_r;

    double calculateZC(){
        //获取周长
        return 2*PI*m_r;
    }
};

int main(){
    //通过圆类，创建圆的对象
    // c1就是一个具体的圆
    //c1就是一个被实例化的对象
    Circle c1;
    c1.m_r = 10;  //给圆对象的半径 进行赋值操作
    cout<<"周长是： "<<c1.calculateZC()<<endl;

    return 0;
}